#Â File generated by aws2tf see https://github.com/aws-samples/aws2tf
# aws_codepipeline.r-squid-ecr-SquidProxy-CodeCommitEvents-pipeline:
resource "aws_codepipeline" "r-squid-ecr-SquidProxy-CodeCommitEvents-pipeline" {
  name       = "squid-ecr-SquidProxy-CodeCommitEvents-pipeline"
  depends_on = [aws_iam_role.r-squid-ecr-CodePipelineServiceRole-1U9IRLT60MSM6]
  role_arn   = aws_iam_role.r-squid-ecr-CodePipelineServiceRole-1U9IRLT60MSM6.arn
  tags       = {}
  tags_all   = {}

  artifact_store {
    location = aws_s3_bucket.b_squid-ecr-codepipelineartifactstorebucket-3qgzkmb8mf0k.id
    type     = "S3"
  }

  stage {
    name = "Source"

    action {
      category = "Source"
      configuration = {
        "BranchName"           = "main"
        "PollForSourceChanges" = "false"
        "RepositoryName"       = "squid-proxy"
      }
      input_artifacts = []
      name            = "SourceAction"
      output_artifacts = [
        "SourceOutput",
      ]
      owner     = "AWS"
      provider  = "CodeCommit"
      run_order = 1
      version   = "1"
    }
  }
  stage {
    name = "Build"

    action {
      category = "Build"
      configuration = {
        "ProjectName" = "squid-ecr-SquidProxyBuild"
      }
      input_artifacts = [
        "SourceOutput",
      ]
      name = "BuildAction"
      output_artifacts = [
        "BuildOutput",
      ]
      owner     = "AWS"
      provider  = "CodeBuild"
      run_order = 1
      version   = "1"
    }
  }
  stage {
    name = "Deploy"

    action {
      category = "Deploy"
      configuration = {
        "ClusterName" = "squid-ecr-ECSCluster"
        "FileName"    = "imageDetail.json"
        "ServiceName" = format("arn:aws:ecs:%s:%s:service/squid-ecr-ECSCluster/squid-ecr-ECSService-Kf9lgxSDQTcT", data.aws_region.current.name, data.aws_caller_identity.current.account_id)
      }
      input_artifacts = [
        "BuildOutput",
      ]
      name             = "DeployAction"
      output_artifacts = []
      owner            = "AWS"
      provider         = "ECS"
      run_order        = 1
      version          = "1"
    }
  }
}
